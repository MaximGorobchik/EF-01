// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using P03_SalesDatabase.Data;

#nullable disable

namespace SalesDatabase.Migrations
{
    [DbContext(typeof(SalesContext))]
    partial class SalesContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("P03_SalesDatabase.Data.Models.Customer", b =>
                {
                    b.Property<int>("CustomerID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerID"));

                    b.Property<string>("CreditCardNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar")
                        .HasColumnName("CreditCardNumber");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(80)
                        .IsUnicode(false)
                        .HasColumnType("varchar")
                        .HasColumnName("Email");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar")
                        .HasColumnName("Name");

                    b.HasKey("CustomerID");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            CustomerID = 1,
                            CreditCardNumber = "6494-4939-1674-3708",
                            Email = "Graciela_Deckow64@hotmail.com",
                            Name = "Alberta"
                        },
                        new
                        {
                            CustomerID = 2,
                            CreditCardNumber = "6373-5546-2446-0046",
                            Email = "Douglas_Ziemann35@hotmail.com",
                            Name = "David"
                        },
                        new
                        {
                            CustomerID = 3,
                            CreditCardNumber = "6767-1243-9212-4646-886",
                            Email = "Micheal_Goyette21@hotmail.com",
                            Name = "Alexandra"
                        },
                        new
                        {
                            CustomerID = 4,
                            CreditCardNumber = "6771-8964-9753-3468",
                            Email = "Ernesto_Haley@yahoo.com",
                            Name = "Claudie"
                        },
                        new
                        {
                            CustomerID = 5,
                            CreditCardNumber = "3529-1938-2848-5010",
                            Email = "Rhett91@hotmail.com",
                            Name = "Kayli"
                        },
                        new
                        {
                            CustomerID = 6,
                            CreditCardNumber = "5393-9247-0571-4405",
                            Email = "Margot.Bins@hotmail.com",
                            Name = "Pat"
                        },
                        new
                        {
                            CustomerID = 7,
                            CreditCardNumber = "3761-049374-11417",
                            Email = "Garth.DAmore43@yahoo.com",
                            Name = "Thora"
                        },
                        new
                        {
                            CustomerID = 8,
                            CreditCardNumber = "6759-0420-6985-9827",
                            Email = "Lemuel_Hoppe64@gmail.com",
                            Name = "Isom"
                        },
                        new
                        {
                            CustomerID = 9,
                            CreditCardNumber = "3717-870457-56361",
                            Email = "Rigoberto2@gmail.com",
                            Name = "Giovani"
                        },
                        new
                        {
                            CustomerID = 10,
                            CreditCardNumber = "6384-7276-4760-4934",
                            Email = "Angel24@yahoo.com",
                            Name = "Guido"
                        });
                });

            modelBuilder.Entity("P03_SalesDatabase.Data.Models.Product", b =>
                {
                    b.Property<int>("ProductID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductID"));

                    b.Property<string>("Description")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar")
                        .HasDefaultValue("No description")
                        .HasColumnName("Description");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar")
                        .HasColumnName("Name");

                    b.Property<decimal>("Price")
                        .HasColumnType("money")
                        .HasColumnName("Price");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("decimal(15,2)")
                        .HasColumnName("Quantity");

                    b.HasKey("ProductID");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductID = 1,
                            Name = "Unbranded Metal Sausages",
                            Price = 1049m,
                            Quantity = 7m
                        },
                        new
                        {
                            ProductID = 2,
                            Name = "Sleek Concrete Hat",
                            Price = 2348m,
                            Quantity = 2m
                        },
                        new
                        {
                            ProductID = 3,
                            Name = "Generic Concrete Salad",
                            Price = 2800m,
                            Quantity = 9m
                        },
                        new
                        {
                            ProductID = 4,
                            Name = "Sleek Wooden Chips",
                            Price = 2964m,
                            Quantity = 4m
                        },
                        new
                        {
                            ProductID = 5,
                            Name = "Incredible Cotton Towels",
                            Price = 1081m,
                            Quantity = 2m
                        },
                        new
                        {
                            ProductID = 6,
                            Name = "Refined Rubber Pants",
                            Price = 919m,
                            Quantity = 2m
                        },
                        new
                        {
                            ProductID = 7,
                            Name = "Practical Metal Towels",
                            Price = 1175m,
                            Quantity = 8m
                        },
                        new
                        {
                            ProductID = 8,
                            Name = "Rustic Soft Gloves",
                            Price = 445m,
                            Quantity = 1m
                        },
                        new
                        {
                            ProductID = 9,
                            Name = "Rustic Fresh Shoes",
                            Price = 2429m,
                            Quantity = 6m
                        },
                        new
                        {
                            ProductID = 10,
                            Name = "Tasty Soft Car",
                            Price = 1864m,
                            Quantity = 9m
                        });
                });

            modelBuilder.Entity("P03_SalesDatabase.Data.Models.Sale", b =>
                {
                    b.Property<int>("SaleID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SaleID"));

                    b.Property<int>("CustomerID")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("date")
                        .HasColumnName("Date")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<int>("ProductID")
                        .HasColumnType("int");

                    b.Property<int>("StoreID")
                        .HasColumnType("int");

                    b.HasKey("SaleID");

                    b.HasIndex("CustomerID");

                    b.HasIndex("ProductID");

                    b.HasIndex("StoreID");

                    b.ToTable("Sales");

                    b.HasData(
                        new
                        {
                            SaleID = 1,
                            CustomerID = 9,
                            Date = new DateTime(2022, 9, 7, 23, 11, 49, 282, DateTimeKind.Local).AddTicks(3204),
                            ProductID = 1,
                            StoreID = 3
                        },
                        new
                        {
                            SaleID = 2,
                            CustomerID = 4,
                            Date = new DateTime(2022, 10, 31, 4, 25, 13, 750, DateTimeKind.Local).AddTicks(5778),
                            ProductID = 10,
                            StoreID = 9
                        },
                        new
                        {
                            SaleID = 3,
                            CustomerID = 4,
                            Date = new DateTime(2022, 9, 12, 9, 19, 53, 224, DateTimeKind.Local).AddTicks(7367),
                            ProductID = 10,
                            StoreID = 9
                        },
                        new
                        {
                            SaleID = 4,
                            CustomerID = 8,
                            Date = new DateTime(2023, 1, 5, 21, 58, 1, 692, DateTimeKind.Local).AddTicks(4886),
                            ProductID = 7,
                            StoreID = 1
                        },
                        new
                        {
                            SaleID = 5,
                            CustomerID = 4,
                            Date = new DateTime(2023, 2, 5, 7, 3, 21, 324, DateTimeKind.Local).AddTicks(7090),
                            ProductID = 4,
                            StoreID = 6
                        },
                        new
                        {
                            SaleID = 6,
                            CustomerID = 3,
                            Date = new DateTime(2023, 4, 1, 4, 41, 42, 881, DateTimeKind.Local).AddTicks(6775),
                            ProductID = 1,
                            StoreID = 6
                        },
                        new
                        {
                            SaleID = 7,
                            CustomerID = 6,
                            Date = new DateTime(2022, 6, 21, 14, 12, 45, 906, DateTimeKind.Local).AddTicks(5200),
                            ProductID = 6,
                            StoreID = 5
                        },
                        new
                        {
                            SaleID = 8,
                            CustomerID = 1,
                            Date = new DateTime(2022, 11, 22, 6, 27, 2, 735, DateTimeKind.Local).AddTicks(7874),
                            ProductID = 3,
                            StoreID = 2
                        },
                        new
                        {
                            SaleID = 9,
                            CustomerID = 2,
                            Date = new DateTime(2022, 10, 23, 18, 47, 39, 396, DateTimeKind.Local).AddTicks(872),
                            ProductID = 6,
                            StoreID = 10
                        },
                        new
                        {
                            SaleID = 10,
                            CustomerID = 9,
                            Date = new DateTime(2023, 5, 6, 8, 47, 3, 968, DateTimeKind.Local).AddTicks(8621),
                            ProductID = 10,
                            StoreID = 5
                        });
                });

            modelBuilder.Entity("P03_SalesDatabase.Data.Models.Store", b =>
                {
                    b.Property<int>("StoreID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StoreID"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(80)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar")
                        .HasColumnName("Name");

                    b.HasKey("StoreID");

                    b.ToTable("Stores");

                    b.HasData(
                        new
                        {
                            StoreID = 1,
                            Name = "Johns - Bauch"
                        },
                        new
                        {
                            StoreID = 2,
                            Name = "Mraz - Bernier"
                        },
                        new
                        {
                            StoreID = 3,
                            Name = "Abernathy - Legros"
                        },
                        new
                        {
                            StoreID = 4,
                            Name = "Mills, Considine and Kessler"
                        },
                        new
                        {
                            StoreID = 5,
                            Name = "Farrell - Ernser"
                        },
                        new
                        {
                            StoreID = 6,
                            Name = "Ward - Brown"
                        },
                        new
                        {
                            StoreID = 7,
                            Name = "Davis and Sons"
                        },
                        new
                        {
                            StoreID = 8,
                            Name = "Bechtelar, Adams and Schneider"
                        },
                        new
                        {
                            StoreID = 9,
                            Name = "Stoltenberg - Cronin"
                        },
                        new
                        {
                            StoreID = 10,
                            Name = "Barrows, Ortiz and Stokes"
                        });
                });

            modelBuilder.Entity("P03_SalesDatabase.Data.Models.Sale", b =>
                {
                    b.HasOne("P03_SalesDatabase.Data.Models.Customer", "Customer")
                        .WithMany("Sales")
                        .HasForeignKey("CustomerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("P03_SalesDatabase.Data.Models.Product", "Product")
                        .WithMany("Sales")
                        .HasForeignKey("ProductID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("P03_SalesDatabase.Data.Models.Store", "Store")
                        .WithMany("Sales")
                        .HasForeignKey("StoreID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Product");

                    b.Navigation("Store");
                });

            modelBuilder.Entity("P03_SalesDatabase.Data.Models.Customer", b =>
                {
                    b.Navigation("Sales");
                });

            modelBuilder.Entity("P03_SalesDatabase.Data.Models.Product", b =>
                {
                    b.Navigation("Sales");
                });

            modelBuilder.Entity("P03_SalesDatabase.Data.Models.Store", b =>
                {
                    b.Navigation("Sales");
                });
#pragma warning restore 612, 618
        }
    }
}
